import { useState } from 'react';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Button } from '@/components/ui/button';
import { Spinner } from '@/components/ui/spinner';
import { BookOpen, Video, Brain, BookOpenCheck } from 'lucide-react';

interface ConceptDetailProps {
  conceptId: string;
  conceptData: {
    label: string;
    description: string;
    [key: string]: any;
  };
  onClose: () => void;
}

export default function ConceptDetail({ conceptId, conceptData, onClose }: ConceptDetailProps) {
  const [activeTab, setActiveTab] = useState('explanation');
  const [videoLoading, setVideoLoading] = useState(true);

  // Mock videos that would come from YouTube API
  const mockVideoUrl = 'https://www.youtube.com/embed/dQw4w9WgXcQ';
  
  // Mock explanation that would come from Gemini API
  const mockExplanation = `
    <h3 class="text-lg font-semibold mb-2">${conceptData.label}</h3>
    <p class="mb-3">
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam auctor, 
      nisl eget ultricies tincidunt, nisl nisl aliquam nisl, eget ultricies nisl 
      nisl eget nisl. Nullam auctor, nisl eget ultricies tincidunt, nisl nisl 
      aliquam nisl, eget ultricies nisl nisl eget nisl.
    </p>
    <h4 class="text-md font-semibold mb-2">Key Points</h4>
    <ul class="list-disc pl-5 mb-3">
      <li>First important point about this concept</li>
      <li>Second critical element to understand</li>
      <li>Relationship to other connected concepts</li>
      <li>Common misconceptions to avoid</li>
    </ul>
    <p class="text-sm text-gray-500 mt-4">
      This explanation was generated by AI to help you understand the concept better.
    </p>
  `;
  
  // Mock flashcards that would be generated by AI
  const mockFlashcards = [
    { question: 'What is the main purpose of this concept?', answer: 'To understand the fundamental principles that govern the subject area.' },
    { question: 'How does this concept relate to the broader topic?', answer: 'It serves as a foundational element that supports more complex ideas within the field.' },
    { question: 'What are common applications of this concept?', answer: 'This concept is applied in various scenarios including [specific examples related to the field].' }
  ];

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle className="flex items-center justify-between">
          <span>{conceptData.label}</span>
          <Button variant="outline" size="sm" onClick={onClose}>Close</Button>
        </CardTitle>
        <CardDescription>{conceptData.description}</CardDescription>
      </CardHeader>
      <CardContent>
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid grid-cols-3 mb-4">
            <TabsTrigger value="explanation" className="flex items-center gap-2">
              <BookOpen className="h-4 w-4" />
              <span>Explanation</span>
            </TabsTrigger>
            <TabsTrigger value="video" className="flex items-center gap-2">
              <Video className="h-4 w-4" />
              <span>Video</span>
            </TabsTrigger>
            <TabsTrigger value="flashcards" className="flex items-center gap-2">
              <Brain className="h-4 w-4" />
              <span>Flashcards</span>
            </TabsTrigger>
          </TabsList>
          
          <TabsContent value="explanation" className="min-h-[400px]">
            <div className="prose prose-sm dark:prose-invert max-w-none" dangerouslySetInnerHTML={{ __html: mockExplanation }} />
          </TabsContent>
          
          <TabsContent value="video" className="min-h-[400px]">
            <div className="aspect-video relative">
              {videoLoading && (
                <div className="absolute inset-0 flex items-center justify-center bg-gray-100 dark:bg-gray-800">
                  <Spinner size="lg" />
                </div>
              )}
              <iframe
                width="100%"
                height="100%"
                src={mockVideoUrl}
                title={`Video about ${conceptData.label}`}
                frameBorder="0"
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowFullScreen
                onLoad={() => setVideoLoading(false)}
                className="absolute inset-0"
              ></iframe>
            </div>
            <div className="mt-4">
              <h3 className="text-lg font-semibold mb-2">Video Summary</h3>
              <p className="text-sm text-gray-600 dark:text-gray-300">
                This video explains the key aspects of {conceptData.label}, including its definition, 
                applications, and relationship to other concepts in the field.
              </p>
            </div>
          </TabsContent>
          
          <TabsContent value="flashcards" className="min-h-[400px]">
            <div className="space-y-4">
              <div className="flex justify-between items-center">
                <h3 className="text-lg font-semibold">Study Flashcards</h3>
                <Button variant="outline" size="sm">Export to PDF</Button>
              </div>
              
              <div className="space-y-4">
                {mockFlashcards.map((card, index) => (
                  <div key={index} className="border rounded-lg overflow-hidden">
                    <div className="bg-gray-50 dark:bg-gray-800 p-3 border-b">
                      <h4 className="font-medium">Question {index + 1}:</h4>
                      <p>{card.question}</p>
                    </div>
                    <div className="p-3 bg-white dark:bg-gray-900">
                      <h4 className="font-medium text-gray-500 dark:text-gray-400 mb-1">Answer:</h4>
                      <p>{card.answer}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </CardContent>
      <CardFooter className="flex justify-between">
        <Button variant="outline" onClick={onClose}>Back to Concept Map</Button>
        <Button>
          Mark as Understood
        </Button>
      </CardFooter>
    </Card>
  );
}